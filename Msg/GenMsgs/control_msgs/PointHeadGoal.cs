namespace Roslin.Msg.control_msgs
{
    [MsgInfo("control_msgs/PointHeadGoal", "8b92b1cd5e06c8a94c917dc3209a4c1d", @"# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PointStamped target
geometry_msgs/Vector3 pointing_axis
string pointing_frame
duration min_duration
float64 max_velocity
")]
    public partial class PointHeadGoal : RosMsg
    {
        public geometry_msgs.PointStamped target
        {
            get;
            set;
        }

        public geometry_msgs.Vector3 pointing_axis
        {
            get;
            set;
        }

        public System.String pointing_frame
        {
            get;
            set;
        }

        public System.TimeSpan min_duration
        {
            get;
            set;
        }

        public System.Double max_velocity
        {
            get;
            set;
        }

        public PointHeadGoal(): base()
        {
        }

        public PointHeadGoal(System.IO.BinaryReader binaryReader): base(binaryReader)
        {
        }

        public override void Serilize(System.IO.BinaryWriter binaryWriter)
        {
            target.Serilize(binaryWriter);
            pointing_axis.Serilize(binaryWriter);
            binaryWriter.Write(pointing_frame.Length); binaryWriter . Write ( System . Text . Encoding . UTF8 . GetBytes ( pointing_frame ) ) ; 
            binaryWriter.Write(min_duration);
            binaryWriter.Write(max_velocity);
        }

        public override void Deserilize(System.IO.BinaryReader binaryReader)
        {
            target = new geometry_msgs.PointStamped(binaryReader);
            pointing_axis = new geometry_msgs.Vector3(binaryReader);
            pointing_frame = System.Text.Encoding.UTF8.GetString(binaryReader.ReadBytes(binaryReader.ReadInt32()));
            min_duration = binaryReader.ReadTimeSpan();
            max_velocity = binaryReader.ReadDouble();
        }
    }
}